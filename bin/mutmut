#!/usr/bin/env python

import os

# 1. How many mutations are available?
#   a. for every source file, count mutations
#   b. sum total
# 2. For every available mutation, run test suite against that mutation
import sys
from subprocess import check_call

from mutmut import mutate, ALL, count_mutations


def main(paths_to_mutate):
    mutations_by_file = {}

    for path in paths_to_mutate:
        for filename in python_source_files(path):
            mutations_by_file[filename] = count_mutations(open(filename).read())

    total = sum(mutations_by_file.values())

    print '--- starting mutation ---'
    progress = 0
    for filename, mutations in mutations_by_file.items():
        print filename
        for mutation_index in range(mutations):
            progress += 1
            print '%s out of %s' % (progress, total)
            check_call('py.test tests/ --mutate="%s:%s" -s' % (filename, mutation_index), shell=True)


def python_source_files(path):
    for root, dirs, files in os.walk(path):
        for filename in files:
            if filename.endswith('.py'):
                yield os.path.join(root, filename)


def number_of_mutations(path):
    total = 0
    for filename in python_source_files(path):
        _, c = mutate(open(filename).read(), ALL)
        total += c
    return total

if __name__ == '__main__':
    main([sys.argv[1]])
